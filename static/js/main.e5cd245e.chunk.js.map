{"version":3,"sources":["pages/visits/Visits.module.css","components/loading/Loading.module.css","components/button/Button.module.css","components/table/Table.module.css","pages/home/Home.module.css","pages/physician/Physcian.module.css","components/loading/Loading.tsx","functions/shortendDate.ts","components/table/Table.tsx","pages/home/Home.tsx","components/button/Button.tsx","pages/not-found/notFound.tsx","images/doctor.png","pages/physician/Physician.tsx","pages/visits/Visits.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Loading","className","classes","Loader","shortendDate","date","Months","dateSplit","split","charAt","length","Number","Table","useState","patients","setPatients","loading","setLoading","ferrumPatientsAPI","useEffect","fetch","then","response","json","data","catch","error","console","log","title","map","patient","firstName","lastName","href","email","address","phone","since","to","id","Home","Header","Button","props","history","useHistory","goHome","onClick","goBack","notFound","Physician","physicianID","useParams","physician","setPhysician","requestWorked","setRequestWorked","physicianInfoApi","Card","src","profile","alt","Visits","visits","setVisits","ferrumVisitssAPI","patientID","Patient","Containers","visit","Container","time","location","symptoms","diagnosis","physicianId","withRouter","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5cd245e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Visits\":\"Visits_Visits__3qPZM\",\"Patient\":\"Visits_Patient__3hfOj\",\"Containers\":\"Visits_Containers__Of6Xy\",\"Container\":\"Visits_Container__1TVzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loading_Loading__1PTXA\",\"Loader\":\"Loading_Loader__XJmFL\",\"spin\":\"Loading_spin__2hZwy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UUCg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__EGIDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Home_Header__3_kxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Physcian_Card__nzPma\"};","import React from 'react';\nimport classes from './Loading.module.css';\n\nconst Loading: React.FC = () => {\n    return (\n        <div className={classes.Loading}>\n            <div className={classes.Loader} />\n            <p>Just Wait a Short Amount</p>\n        </div>\n    )\n}\n\nexport default Loading","export default function shortendDate(date: string): string {\n    const Months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    let daySeperationFromTime = date.split('T')\n    let dateSplit = daySeperationFromTime[0].split('-')\n    switch (dateSplit[2].charAt(dateSplit[2].length - 1)) {\n        case '1':\n            return `${Number(dateSplit[2])}st of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n        case '2':\n            return `${Number(dateSplit[2])}nd of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n        case '3':\n            return `${Number(dateSplit[2])}rd of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n        default:\n            return `${Number(dateSplit[2])}th of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n    }\n\n}\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading';\nimport classes from './Table.module.css';\nimport shortendDate from '../../functions/shortendDate'\n\ninterface Patient {\n  id: string,\n  firstName: string,\n  lastName: string,\n  email: string,\n  address: string,\n  phone: string,\n  since: string\n}\nconst Table: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]),\n    [loading, setLoading] = useState<boolean>(true),\n    ferrumPatientsAPI: string = 'https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients'\n\n  useEffect(() => {\n    fetch(ferrumPatientsAPI)\n      .then(response => response.json())\n      .then(data => setPatients(data))\n      .then(data => setLoading(false))\n      .catch((error) => console.log(error));\n  }, [ferrumPatientsAPI])\n\n  if (loading === true) {\n    return <Loading />\n  }\n  else {\n    return (\n      <div className={classes.Table}>\n        <h2>List of Patients</h2>\n        <table >\n          <thead>\n            <tr>\n              <th title=\"First Name\">First Name</th>\n              <th title=\"Last Name\">Last Name</th>\n              <th title=\"E-Mail\">E-Mail</th>\n              <th title=\"Address\">Address</th>\n              <th title=\"Number\">Number</th>\n              <th title=\"Joined\">Joined</th>\n              <th title=\"Visits\">Visits</th>\n\n            </tr>\n          </thead>\n          <tbody>\n            {patients.map((patient) =>\n\n              <tr key={patient.id}>\n                <td>{patient.firstName}</td>\n                <td>{patient.lastName}</td>\n                <td><a href={`mailto:${patient.email}`}>{patient.email}</a></td>\n                <td>{patient.address}</td>\n                <td><a href={`tel:${patient.phone}`}>{patient.phone}</a></td>\n                <td>{shortendDate(patient.since)}</td>\n                <td><Link to={`/patients/${patient.id}/${patient.firstName}/${patient.lastName}`}>View Visits</Link></td>\n              </tr>\n\n            )}\n          </tbody>\n        </table>\n      </div>)\n  }\n}\nexport default Table\n\n\n","import React from 'react';\nimport Table from '../../components/table/Table';\nimport classes from './Home.module.css';\n\n\nconst Home: React.FC = () => {\n  return (\n    <div >\n      <div className={classes.Header}>\n        <h2>Welcome to </h2>\n        <h3>Because behind every scan is a person. </h3>\n      </div>\n      <Table />\n\n\n    </div>)\n}\n\nexport default Home","import React from 'react';\nimport classes from './Button.module.css';\nimport { useHistory, Link } from 'react-router-dom';\n\ninterface Props {\n    goHome: boolean\n}\n\nconst Button: React.FC<Props> = (props: Props) => {\n    const history = useHistory()\n    if (props.goHome === true) {\n        return (\n            <Link to='/patients'><button className={classes.Button}>Go to HomePage</button></Link>\n        )\n    }\n    else {\n        return (\n            <button className={classes.Button} onClick={() => history.goBack()}>Go to Previous Page</button>\n        )\n    }\n\n}\n\n\n\nexport default Button\n","import React from 'react';\nimport Button from '../../components/button/Button';\n\n\nconst notFound: React.FC = () => {\n  return (\n    <div >\n      <h1>404</h1>\n      <p>Page does not exist! Unless you were\n      looking for this error page, In which\n          case you find it!</p>\n      <Button goHome={true} />\n\n    </div>)\n}\n\nexport default notFound\n\n\n","export default __webpack_public_path__ + \"static/media/doctor.aa382748.png\";","import React, { useState, useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading'\nimport Button from '../../components/button/Button'\nimport profile from '../../images/doctor.png';\nimport classes from './Physcian.module.css';\ninterface PhysicianInfo {\n  id: string\n  firstName: string,\n  lastName: string,\n  phone: string\n}\ninterface PhysicianID {\n  physicianID: string\n}\n\nconst Physician: React.FC = () => {\n  const physicianID: PhysicianID = useParams(),\n    [physician, setPhysician] = useState<Partial<PhysicianInfo>>({}),\n    [loading, setLoading] = useState<boolean>(true),\n    [requestWorked, setRequestWorked] = useState<boolean>(true),\n    physicianInfoApi: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/physicians/${physicianID.physicianID}`\n  useEffect(() => {\n    fetch(physicianInfoApi)\n      .then(response => response.json())\n      .then(data => setPhysician(data))\n      .then(data => setLoading(false))\n      .catch((error) => setRequestWorked(false));\n  }, [physicianInfoApi]);\n  if (requestWorked === false) {\n    return <Redirect to='/patients/not-found' />\n  } else {\n    if (loading === true) {\n      return <Loading />\n    }\n    else {\n      return (\n        <div>\n          <h2>Hey I'm DR. {physician.firstName} {physician.lastName}</h2>\n          <div key={physician.id} className={classes.Card}>\n            <img src={profile} alt=\"Physician\" />\n            <h3 >You can call me at <a href={`tel:${physician.phone}`}>{physician.phone}</a></h3>\n          </div>\n          <Button goHome={true} />\n          <Button goHome={false} />\n        </div>\n\n\n      )\n    }\n  }\n}\n\nexport default Physician","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, Redirect } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading';\nimport classes from './Visits.module.css';\nimport shortendDate from '../../functions/shortendDate';\nimport Button from '../../components/button/Button'\n\ninterface Visit {\n  id: string,\n  patientId: string,\n  physicianId: string,\n  time: string,\n  location: string,\n  symptoms: string,\n  diagnosis: string\n}\ninterface Patient {\n  patientID: string\n  firstName: string\n  lastName: string\n}\n\n\n\nconst Visits: React.FC = () => {\n  const patient: Patient = useParams(),\n    [visits, setVisits] = useState<Visit[]>([]),\n    [loading, setLoading] = useState<boolean>(true),\n    [requestWorked, setRequestWorked] = useState<boolean>(true),\n    ferrumVisitssAPI: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients/${patient.patientID}/visits`\n\n  useEffect(() => {\n    fetch(ferrumVisitssAPI)\n      .then(response => response.json())\n      .then(data => setVisits(data))\n      .then(data => setLoading(false))\n      .catch((error) => setRequestWorked(false));\n  }, [ferrumVisitssAPI])\n\n  if (requestWorked === false) {\n    return <Redirect to='/patients/not-found' />\n  } else {\n    if (loading === true) {\n      return <Loading />\n    }\n    else {\n      return (\n        <div className={classes.Visits}>\n          <h2 className={classes.Patient}>{patient.firstName} {patient.lastName}'s visits</h2>\n          <div className={classes.Containers}>\n            {\n              visits.map((visit) =>\n                <div key={visit.id} className={classes.Container}>\n                  <h3>{shortendDate(visit.time)} at {visit.location}</h3>\n                  <ul>\n                    <li><strong>Symptoms:</strong> {visit.symptoms}</li>\n                    <li><strong>Diagnosis:</strong> {visit.diagnosis} </li>\n                    <li><Link to={`/patients/physicians/${visit.physicianId}`}>Click Here to see the Physician</Link></li>\n                  </ul>\n                </div>\n              )}\n\n          </div>\n          <Button goHome={false} />\n        </div>)\n    }\n  }\n}\n\nexport default Visits","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Home from './pages/home/Home';\nimport NotFound from './pages/not-found/notFound';\nimport Physician from './pages/physician/Physician';\nimport Visits from './pages/visits/Visits';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/patients' component={Home} />\n        <Route exact path='/patients/not-found' component={NotFound} />\n        <Route exact path='/patients/:patientID/:firstName/:lastName' component={Visits} />\n        <Route exact path='/patients/physicians/:physicianID' component={Physician} />\n      </Switch>\n    </div>)\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}