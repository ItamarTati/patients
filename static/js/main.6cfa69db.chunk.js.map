{"version":3,"sources":["components/container/Container.tsx","components/table/Table.tsx","pages/home/Home.tsx","pages/not-found/notFound.tsx","pages/physician/Physician.tsx","pages/visits/Visits.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","Table","useState","patients","setPatients","ferrumPatientsAPI","useEffect","fetch","then","response","json","data","catch","error","console","log","map","patient","id","firstName","lastName","email","address","phone","since","to","Home","notFound","Physician","useParams","physician","setPhysician","physicianInfoApi","Physicianid","Visits","visits","setVisits","ferrumVisitssAPI","Patientid","visit","patientId","physicianId","time","location","symptoms","diagnosis","withRouter","className","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cfa69db.chunk.js","sourcesContent":["import React from 'react'\n\nconst Container: React.FC = () => {\n    return (\n    <div >\n        <p>People</p>\n\n    </div>)\n}\nexport default Container","import React, { useState, useEffect } from 'react';\nimport Container from '../container/Container';\nimport { Link } from 'react-router-dom';\n\ninterface Patient{\n    id: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    address: string,\n    phone: string,\n    since: string\n}\nconst Table: React.FC = () => {\n    const [patients, setPatients] = useState<Patient[]>([]), \n    ferrumPatientsAPI: string = 'https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients'\n    \n    useEffect(() => {\n        fetch(ferrumPatientsAPI)\n        .then(response => response.json())\n        .then(data => setPatients(data))\n        .catch((error) => console.log(error));\n      }, [ferrumPatientsAPI])\n\n\n    return (\n    <div >\n        <h2>List of Users</h2>\n        {patients.map((patient) => \n        <div>\n        <p key = {patient.id}>{patient.id}, {patient.firstName}, {patient.lastName}, \n        {patient.email}, {patient.address}, {patient.phone}, {patient.since} </p>\n        <p><Link to={`/${patient.id}/visits`}>Look at visits</Link></p>\n        </div>\n        )}\n        <Container/>\n    </div>)\n}\nexport default Table","import React from 'react';\nimport Table from '../../components/table/Table'\n\nconst Home: React.FC = () => {\n    return (\n    <div >\n        <h1>HomePage</h1>\n\n        <Table/>\n    \n\n    </div>)\n  }\n\nexport default Home","import React from 'react';\n\n\nconst notFound: React.FC = () => {\n    return (\n    <div >\n        <h1>Page not found</h1>\n\n    </div>)\n  }\n\nexport default notFound","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\ninterface PhysicianInfo{  \n    id: string\n    firstName: string,\n    lastName: string,\n    phone: string\n}\ninterface id{\n  Physicianid: string\n}\n\nconst Physician: React.FC = () => {\n  const id: id = useParams()\n  const [physician, setPhysician] = useState<Partial<PhysicianInfo>>({}), \n  physicianInfoApi: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/physicians/${id.Physicianid}`\n  useEffect(() => {\n    fetch(physicianInfoApi)\n        .then(response => response.json())\n        .then(data => setPhysician(data))\n        .catch((error) => console.log(error));\n  }, [physicianInfoApi])\n\n\n  return (\n    <div key = {physician.id}>\n        <h1>Physician Page</h1>\n        <p>{physician.id}, {physician.firstName}, {physician.lastName}, {physician.phone}</p>\n\n    </div>)\n  }\n\nexport default Physician","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\ninterface Visit{  \n    id: string,\n    patientId: string,\n    physicianId: string,\n    time: string,\n    location: string,\n    symptoms: string,\n    diagnosis: string\n}\ninterface id{\n  Patientid: string\n}\n\nconst Visits: React.FC = () => {\n  const id: id = useParams()\n  const [visits, setVisits] = useState<Visit[]>([]), \n  ferrumVisitssAPI: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients/${id.Patientid}/visits`\n    \n  useEffect(() => {\n    fetch(ferrumVisitssAPI)\n    .then(response => response.json())\n    .then(data => setVisits(data))\n    .catch((error) => console.log(error));\n    }, [ferrumVisitssAPI])\n  \n    return (\n    <div >\n        <h1>Visits Page</h1>\n        {\n        visits.map((visit) => \n        <div key={visit.id}>\n        <p >{visit.id}, {visit.patientId}, {visit.physicianId}, \n        {visit.time}, {visit.location}, {visit.symptoms}, {visit.diagnosis} </p>\n        <p><Link to={`/physicians/${visit.physicianId}`}>Look at phycisian</Link></p>\n        </div> \n        )}\n\n    </div>)\n  }\n\nexport default Visits","import React from 'react';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Home from './pages/home/Home'\nimport NotFound from './pages/not-found/notFound'\nimport Physician from './pages/physician/Physician'\nimport Visits from './pages/visits/Visits'\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n  <div className='App'>\n    <Switch>\n      <Route exact path='/patients' component={Home} />\n      <Route exact path='/not-found' component={NotFound} />\n      <Route exact path='/:Patientid/visits' component={Visits} />\n      <Route exact path='/physicians/:Physicianid' component={Physician} />\n    </Switch>\n  </div>)\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}