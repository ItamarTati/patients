{"version":3,"sources":["components/loading/Loading.module.css","components/table/Table.module.css","pages/home/Home.module.css","components/loading/Loading.tsx","functions/shortendDate.ts","components/table/Table.tsx","pages/home/Home.tsx","pages/not-found/notFound.tsx","pages/physician/Physician.tsx","pages/visits/Visits.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Loading","className","classes","Loader","shortendDate","date","Months","dateSplit","split","charAt","length","Number","Table","useState","patients","setPatients","loading","setLoading","ferrumPatientsAPI","useEffect","fetch","then","response","json","data","catch","error","console","log","title","map","patient","firstName","lastName","href","address","email","phone","since","to","id","Home","Header","notFound","Physician","physicianID","useParams","physician","setPhysician","requestWorked","setRequestWorked","physicianInfoApi","Visits","visits","setVisits","ferrumVisitssAPI","patientID","visit","patientId","physicianId","time","location","symptoms","diagnosis","withRouter","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f7e8cbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loading_Loading__1PTXA\",\"Loader\":\"Loading_Loader__XJmFL\",\"spin\":\"Loading_spin__2hZwy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__EGIDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Home_Header__3_kxF\"};","import React from 'react';\nimport classes from './Loading.module.css';\n\nconst  Loading: React.FC = () => {\n    return (\n        <div className={classes.Loading}>\n            <div className={classes.Loader} />\n            <p>Jusr Wait a Short Amount</p>\n        </div>\n    )\n}\n\nexport default Loading","export default function shortendDate(date: string):string {\n    const Months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    let daySeperationFromTime = date.split('T')\n    let dateSplit = daySeperationFromTime[0].split('-')\n    switch(dateSplit[2].charAt(dateSplit[2].length - 1)) {\n        case '1':\n            return `${Number(dateSplit[2])}st of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}` \n        case '2':\n            return `${Number(dateSplit[2])}nd of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n        case '3':\n            return `${Number(dateSplit[2])}rd of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n        default:\n            return `${Number(dateSplit[2])}th of ${Months[Number(dateSplit[1]) - 1]}, ${dateSplit[0]}`\n      }\n    \n}\n\n\n\n    \n\n\n   \n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading';\nimport classes from './Table.module.css';\nimport shortendDate from '../../functions/shortendDate'\n\ninterface Patient{\n    id: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    address: string,\n    phone: string,\n    since: string\n}\nconst Table: React.FC = () => {\n    const [patients, setPatients] = useState<Patient[]>([]),\n    [loading, setLoading] =  useState<boolean>(true), \n    ferrumPatientsAPI: string = 'https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients'\n    \n    useEffect(() => {\n        fetch(ferrumPatientsAPI)\n        .then(response => response.json())\n        .then(data => setPatients(data))\n        .then(data => setLoading(false))\n        .catch((error) => console.log(error));\n      }, [ferrumPatientsAPI])\n\n      if(loading === true){  \n        return <Loading />\n      }\n      else{\n    return (\n    <div className = {classes.Table}>\n        <h2>List of Users</h2>\n        <table >\n           <thead>\n             <tr>\n               <th title=\"Field #1\">First</th>\n               <th title=\"Field #2\">Last</th>\n               <th title=\"Field #3\">E-mail</th>\n               <th title=\"Field #4\">Address</th>\n               <th title=\"Field #5\">Number</th>\n               <th title=\"Field #6\">Joined</th>\n               <th title=\"Field #7\">Visits</th>\n\n             </tr>\n           </thead>\n           <tbody>\n        {patients.map((patient) => \n           \n      <tr key={patient.id}>\n        <td>{patient.firstName}</td>\n        <td>{patient.lastName}</td>\n        <td><a href={`mailto:${patient.address}`}>{patient.email}</a></td>\n        <td>{patient.address}</td>\n        <td><a href={`tel:${patient.address}`}>{patient.phone}</a></td>\n        <td>{shortendDate(patient.since)}</td>\n        <td><Link to={`/patients/${patient.id}/${patient.firstName}/${patient.lastName}`}>View Visits</Link></td>\n      </tr>\n\n        )}\n      </tbody>\n      </table>\n    </div>)}\n}\nexport default Table\n\n\n","import React from 'react';\nimport Table from '../../components/table/Table';\nimport classes from './Home.module.css';\n\n\nconst Home: React.FC = () => {\n    return (\n    <div >\n      <div className={classes.Header}>\n          <h2>Welcome to </h2>\n          <h3>Because behind every scan is a person. </h3>\n      </div>\n        <Table/>\n    \n\n    </div>)\n  }\n\nexport default Home","import React from 'react';\n\n\nconst notFound: React.FC = () => {\n    return (\n    <div >\n        <h1>Page not found</h1>\n\n    </div>)\n  }\n\nexport default notFound","import React, { useState, useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading'\n\ninterface PhysicianInfo{  \n    id: string\n    firstName: string,\n    lastName: string,\n    phone: string\n}\ninterface PhysicianID{\n  physicianID: string\n}\n\nconst Physician: React.FC = () => {\n  const physicianID: PhysicianID = useParams()\n  const [physician, setPhysician] = useState<Partial<PhysicianInfo>>({}),\n  [loading, setLoading] =  useState<boolean>(true),\n  [requestWorked, setRequestWorked] =  useState<boolean>(true), \n  physicianInfoApi: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/physicians/${physicianID.physicianID}`\n  useEffect(() => {\n    fetch(physicianInfoApi)\n        .then(response => response.json())\n        .then(data => setPhysician(data))\n        .then(data => setLoading(false))\n        .catch((error) => setRequestWorked(false));\n  }, [physicianInfoApi]);\n  if(requestWorked === false){\n    return <Redirect to='/patients/not-found' />\n  } else{\n    if(loading === true){  \n      return <Loading />\n    }\n    else{\n  return (\n    <div key = {physician.id}>\n        <h1>Physician Page</h1>\n        <p>{physician.id}, {physician.firstName}, {physician.lastName}, {physician.phone}</p>\n\n    </div>)}\n  }}\n\nexport default Physician","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, Redirect } from 'react-router-dom';\nimport Loading from '../../components/loading/Loading'\ninterface Visit{  \n    id: string,\n    patientId: string,\n    physicianId: string,\n    time: string,\n    location: string,\n    symptoms: string,\n    diagnosis: string\n}\ninterface Patient{\n  patientID: string\n  firstName: string\n  lastName: string\n}\n\nconst Visits: React.FC = () => {\n  const patient: Patient = useParams()\n  const [visits, setVisits] = useState<Visit[]>([]),\n  [loading, setLoading] =  useState<boolean>(true),\n  [requestWorked, setRequestWorked] =  useState<boolean>(true),\n  ferrumVisitssAPI: string = `https://us-central1-ferrum-dev.cloudfunctions.net/api/v1/patients/${patient.patientID}/visits`\n    \n  useEffect(() => {\n    fetch(ferrumVisitssAPI)\n    .then(response => response.json())\n    .then(data => setVisits(data))\n    .then(data => setLoading(false))\n    .catch((error) => setRequestWorked(false));\n    }, [ferrumVisitssAPI])\n\n    if(requestWorked === false){\n      return <Redirect to='/patients/not-found' />\n    } else{\n      if(loading === true){  \n        return <Loading />\n      }\n      else{\n    return (\n    <div >\n        <h1>{patient.firstName} {patient.lastName}'s visits</h1>        \n        {\n        visits.map((visit) => \n        <div key={visit.id}>\n        <p >{visit.id}, {visit.patientId}, {visit.physicianId}, \n        {visit.time}, {visit.location}, {visit.symptoms}, {visit.diagnosis} </p>\n        <p><Link to={`/patients/physicians/${visit.physicianId}`}>Look at phycisian</Link></p>\n        </div> \n        )}\n    </div>)}\n    }\n  }\n\nexport default Visits","import React from 'react';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Home from './pages/home/Home';\nimport NotFound from './pages/not-found/notFound';\nimport Physician from './pages/physician/Physician';\nimport Visits from './pages/visits/Visits';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n  <div className='App'>\n    <Switch>\n      <Route exact path='/patients' component={Home} />\n      <Route exact path='/patients/not-found' component={NotFound} />\n      <Route exact path='/patients/:patientID/:firstName/:lastName' component={Visits} />\n      <Route exact path='/patients/physicians/:physicianID' component={Physician} />\n    </Switch>\n  </div>)\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}